{"ast":null,"code":"var _jsxFileName = \"/home/eva/Development/code/phase-3/phase-3-sinatra-react-project/app-client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport Mixologist from \"./Mixologist\";\nimport NewDrink from \"./NewDrink\";\nimport NewMixologist from \"./NewMixologist\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [mixologists, setMixologists] = useState([]);\n  const [latestDrinks, setLatestDrinks] = useState([]);\n  // console.log(mixologists)\n\n  useEffect(() => {\n    fetch(\"http://localhost:9292/mixologists\").then(r => r.json()).then(mixologists => setMixologists(mixologists));\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:9292/drinks\").then(r => r.json()).then(latestDrinks => setLatestDrinks(latestDrinks));\n  }, []);\n  // console.log(latestDrinks)\n  // console.log(mixologists[1])\n\n  const renderMixologists = mixologists.map(mixologist => /*#__PURE__*/_jsxDEV(Mixologist, {\n    mixologistId: mixologist.id,\n    mixologistObj: mixologist // 1/12\n    ,\n    onUpdateDrink: handleUpdateDrink\n  }, mixologist.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this));\n  function handleUpdateDrink(updatedDrink) {\n    // console.log(updatedDrink) // wkg\n\n    // find mixologist with matching ID\n    const found = mixologists.find(mixologist => mixologist.id == updatedDrink.mixologist_id);\n\n    // console.log(found) // wkg\n\n    // variable assignment necessary?\n    const updatedDrinks = found.drinks.map(drink => {\n      // mixologist\n      // // const updatedDrinks = drinks.map(drink => {\n      if (drink.id === updatedDrink.id) {\n        return updatedDrink;\n      } else {\n        return drink;\n      }\n    });\n    console.log(updatedDrinks); // wkg\n\n    // update mixologists arr\n    const updatedMixologist = mixologists.found.drinks = updatedDrinks;\n    const updatedMixologists = mixologists.map(mixologist => {\n      if (mixologist.id == found.id) {\n        return updatedMixologist;\n      } else {\n        return mixologist;\n      }\n    });\n\n    // NOT LOGGING TO CONSOLE\n    console.log(updatedMixologist);\n    console.log(`updatedMixologists: #{updatedMixologists}`);\n    console.log(updatedMixologists);\n\n    // set state\n    setMixologists(updatedMixologists);\n\n    // to update state:\n    // in mixologists, find mixologist w matching ID\n    // replace the mixologist's drinks array\n    // setMixologists() with updated arr\n  }\n\n  // console.log(updatedDrink) \n  // is drink passing mixologist id? \n  // can drink access mixologist id? (ex: drink.mixologist_id)\n  // could this be an opportunity for writing an instance method in Drink class (ex: updatedDrink.mixologist - gets mixologist obj associated with foreign key)\n  // Pseudocode for handleUpdateDrink\n  // mixologists.map(mixologist => \n  // find mixologist with matching ID from edited drink\n  // \n  // find mixologist's drink matching edited drink (id?)\n  // if the drink matches, update drink data\n  // else return existing drink\n  // update mixologist state containing drinks hash\n\n  function handleAddMixologist(newMixologist) {\n    setMixologists([...mixologists, newMixologist]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mixologists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), renderMixologists, /*#__PURE__*/_jsxDEV(NewMixologist, {\n        onAddMixologist: handleAddMixologist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n// function handleAddDrink(newDrink) {\n//   setDrinks([...drinks, newDrink])\n// }\n\n// From Mixologist.js\n// setDrinks(updatedDrinks) // add to state in App.js? not updating UI\n// // rendering from drinksArr, not Mixologist drinks state anymore...\n_s(App, \"yD+CNaD9Cw155iyQmw4rlGs9VHc=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","Mixologist","NewDrink","NewMixologist","App","mixologists","setMixologists","latestDrinks","setLatestDrinks","fetch","then","r","json","renderMixologists","map","mixologist","id","handleUpdateDrink","updatedDrink","found","find","mixologist_id","updatedDrinks","drinks","drink","console","log","updatedMixologist","updatedMixologists","handleAddMixologist","newMixologist"],"sources":["/home/eva/Development/code/phase-3/phase-3-sinatra-react-project/app-client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\n\nimport Header from \"./Header\"\nimport Mixologist from \"./Mixologist\"\nimport NewDrink from \"./NewDrink\"\nimport NewMixologist from \"./NewMixologist\"\nimport \"./App.css\"\n\nexport default function App() {\n  const [mixologists, setMixologists] = useState([])\n  const [latestDrinks, setLatestDrinks] = useState([])\n  // console.log(mixologists)\n\n  useEffect(() => {\n    fetch(\"http://localhost:9292/mixologists\")    \n    .then(r => r.json())\n    .then(mixologists => setMixologists(mixologists))\n  }, [])\n\n  useEffect(() => {\n    fetch(\"http://localhost:9292/drinks\")\n    .then(r => r.json())\n    .then(latestDrinks => setLatestDrinks(latestDrinks))\n  }, [])\n  // console.log(latestDrinks)\n  // console.log(mixologists[1])\n\n  const renderMixologists = mixologists.map(mixologist => (\n    <Mixologist \n      key={mixologist.id}\n      mixologistId={mixologist.id}      \n      mixologistObj = {mixologist} // 1/12\n      onUpdateDrink={handleUpdateDrink}\n\n    />\n  ))\n\n  function handleUpdateDrink(updatedDrink){\n\n    // console.log(updatedDrink) // wkg\n\n    // find mixologist with matching ID\n    const found = mixologists.find(mixologist => (\n      mixologist.id == updatedDrink.mixologist_id\n    ))\n\n    // console.log(found) // wkg\n    \n    // variable assignment necessary?\n    const updatedDrinks = found.drinks.map(drink => { // mixologist\n    // // const updatedDrinks = drinks.map(drink => {\n      if(drink.id === updatedDrink.id){\n        return updatedDrink\n      }else{\n        return drink\n      }\n    })\n\n    console.log(updatedDrinks) // wkg\n\n    // update mixologists arr\n    const updatedMixologist = mixologists.found.drinks = updatedDrinks\n\n    const updatedMixologists = mixologists.map(mixologist => {\n      if(mixologist.id == found.id){\n        return updatedMixologist\n      }else{\n        return mixologist\n      }\n    })\n\n    // NOT LOGGING TO CONSOLE\n    console.log(updatedMixologist)\n\n    console.log(`updatedMixologists: #{updatedMixologists}`)\n    console.log(updatedMixologists)\n\n\n\n    // set state\n    setMixologists(updatedMixologists)\n\n    // to update state:\n      // in mixologists, find mixologist w matching ID\n      // replace the mixologist's drinks array\n      // setMixologists() with updated arr\n  }\n\n  // console.log(updatedDrink) \n    // is drink passing mixologist id? \n      // can drink access mixologist id? (ex: drink.mixologist_id)\n      // could this be an opportunity for writing an instance method in Drink class (ex: updatedDrink.mixologist - gets mixologist obj associated with foreign key)\n// Pseudocode for handleUpdateDrink\n// mixologists.map(mixologist => \n// find mixologist with matching ID from edited drink\n // \n// find mixologist's drink matching edited drink (id?)\n// if the drink matches, update drink data\n// else return existing drink\n// update mixologist state containing drinks hash\n\n  function handleAddMixologist(newMixologist){\n    setMixologists([...mixologists, newMixologist])\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"Wrapper\">\n        <Header />\n        <h2>Mixologists</h2>\n        {renderMixologists}\n        {/* <NewDrink mixologists={mixologists} onAddDrink={handleAddDrink} />  */}\n        <NewMixologist onAddMixologist={handleAddMixologist} />\n      </div>\n    </div>\n  )}\n\n    // function handleAddDrink(newDrink) {\n  //   setDrinks([...drinks, newDrink])\n  // }\n\n  // From Mixologist.js\n      // setDrinks(updatedDrinks) // add to state in App.js? not updating UI\n    // // rendering from drinksArr, not Mixologist drinks state anymore..."],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}