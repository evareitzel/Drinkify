{"ast":null,"code":"var _jsxFileName = \"/home/eva/Development/code/phase-3/phase-3-sinatra-react-project/app-client/src/NewDrink.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewDrink(_ref) {\n  _s();\n  let {\n    mixologists,\n    onAddDrink\n  } = _ref;\n  const [name, setName] = useState(\"\");\n  const [ingredients, setIngredients] = useState(\"\");\n  const [instructions, setInstructions] = useState(\"\");\n  const [mixologistId, setMixologistId] = useState(); // (mixologists[0].id) // works if saved BEFORE page refresh\n  // could solve with a \"choose mixologist\" non-value dropdown initial state?\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    window.alert(`${name} added!`);\n    // console.log(e.target.value)\n    // console.log(mixologistId)\n\n    const drinkData = {\n      name: name,\n      ingredients: ingredients,\n      instructions: instructions,\n      mixologist_id: mixologistId // FIX // parseInt?\n    };\n\n    console.log(drinkData);\n    fetch(\"http://localhost:9292/drinks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(drinkData)\n    }).then(r => r.json()).then(newDrink => {\n      console.log(newDrink); // \n      // onAddDrink(newDrink)\n    });\n  }\n\n  const options = mixologists.map(mixologist => {\n    return /*#__PURE__*/_jsxDEV(\"option\", {\n      value: mixologist.id,\n      children: mixologist.name\n    }, mixologist.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add new drink\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setName(e.target.value),\n          placeholder: \"Drink name\",\n          className: \"Form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Ingredients\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setIngredients(e.target.value),\n          placeholder: \"Sugar, spice, everything nice\",\n          className: \"Form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Instructions\", /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setInstructions(e.target.value),\n          placeholder: \"First things first...\",\n          className: \"Form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Created by:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: mixologistId,\n          onChange: e => setMixologistId(e.target.value) // parseInt\n          // value={mixologistId} \n          ,\n          className: \"Dropdown\",\n          children: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Button-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"Button\",\n          children: \"Add drink\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(NewDrink, \"RSxD0HeHV2jWDq5l0H9tGLyAp3I=\");\n_c = NewDrink;\nvar _c;\n$RefreshReg$(_c, \"NewDrink\");","map":{"version":3,"names":["React","useState","NewDrink","mixologists","onAddDrink","name","setName","ingredients","setIngredients","instructions","setInstructions","mixologistId","setMixologistId","handleSubmit","e","preventDefault","window","alert","drinkData","mixologist_id","console","log","fetch","method","headers","body","JSON","stringify","then","r","json","newDrink","options","map","mixologist","id","target","value"],"sources":["/home/eva/Development/code/phase-3/phase-3-sinatra-react-project/app-client/src/NewDrink.js"],"sourcesContent":["import React, { useState } from \"react\"\n\nexport default function NewDrink({ mixologists, onAddDrink }){\n  const [name, setName] = useState(\"\")\n  const [ingredients, setIngredients] = useState(\"\")\n  const [instructions, setInstructions] = useState(\"\")\n  const [mixologistId, setMixologistId] = useState() // (mixologists[0].id) // works if saved BEFORE page refresh\n    // could solve with a \"choose mixologist\" non-value dropdown initial state?\n\n  function handleSubmit(e){\n        e.preventDefault()\n        window.alert(`${name} added!`)\n        // console.log(e.target.value)\n        // console.log(mixologistId)\n    \n        const drinkData = {\n          name: name,\n          ingredients: ingredients,\n          instructions: instructions,\n          mixologist_id: mixologistId // FIX // parseInt?\n        }\n    console.log(drinkData)\n\n        fetch(\"http://localhost:9292/drinks\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify(drinkData),\n        })\n          .then(r => r.json())\n          .then(newDrink => {\n            console.log(newDrink) // \n            // onAddDrink(newDrink)\n          })\n      }\n\n  const options =  mixologists.map(mixologist => { \n    return <option  \n            key={mixologist.id} \n            value={mixologist.id}\n          >\n            {mixologist.name}\n          </option>\n  }) \n\n  return(\n    <div>\n      <h2>Add new drink</h2>\n      <form className=\"Form\" onSubmit={handleSubmit}>\n        <label>Name\n          <input\n            onChange={e => setName(e.target.value)} \n            placeholder=\"Drink name\" \n            className=\"Form-input\"\n          />\n    {/* type=\"text\" */}\n        </label>\n        <label>Ingredients\n          <input \n            onChange={e => setIngredients(e.target.value)}\n            placeholder=\"Sugar, spice, everything nice\" \n            className=\"Form-input\"  \n          /> \n        </label>\n        <label>Instructions\n          <input \n            onChange={e => setInstructions(e.target.value)}\n            placeholder=\"First things first...\" \n            className=\"Form-input\"\n          /> \n        {/* type=\"text\" */}\n        </label>\n        <label>\n          Created by:\n          <select \n            value={mixologistId}\n            onChange={e => setMixologistId(e.target.value)} // parseInt\n            // value={mixologistId} \n            className=\"Dropdown\"\n          >\n            {options}\n          </select>\n        </label>\n\n        <div className=\"Button-wrapper\">\n          <button type=\"submit\" className=\"Button\">Add drink</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}