{"ast":null,"code":"var _jsxFileName = \"/home/eva/Development/code/phase-3/phase-3-sinatra-react-project/app-client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Header from \"./Header\";\nimport Mixologist from \"./Mixologist\";\nimport NewDrink from \"./NewDrink\";\nimport NewMixologist from \"./NewMixologist\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [mixologists, setMixologists] = useState([]);\n  const [latestDrinks, setLatestDrinks] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:9292/mixologists\").then(r => r.json()).then(mixologists => setMixologists(mixologists));\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:9292/drinks\").then(r => r.json()).then(latestDrinks => setLatestDrinks(latestDrinks));\n  }, []);\n  // console.log(latestDrinks)\n\n  function handleDeleteDrink(id) {\n    window.alert(`${drink.name} deleted!`);\n    // const updatedDrinks = drinksArr.filter(drink => drink.id !== id)\n    // mixologists.find()\n    // const found = mixologists.find(mixologist => {\n    //   mixologist.drinks.include?(drink.id === id)\n    //   found.drinks.filter(drink => {\n    //     drink.id !== id\n    //   })\n    //   {\n    //       mixologist.drinks = updatedDrinks\n    //       return mixologist\n    //     }else{\n    //       return mixologist\n    //     }\n    //   })\n    //   setMixologists(updatedMixologists)\n    // }\n  }\n  // const updatedMixologists = mixologists.map(mixologist => {\n  //   if(mixologist.id === found.id){\n  //     mixologist.drinks = updatedDrinks\n  //     return mixologist\n  //   }else{\n  //     return mixologist\n  //   }\n  // })\n  // setMixologists(updatedMixologists)\n\n  const renderMixologists = mixologists.map(mixologist => /*#__PURE__*/_jsxDEV(Mixologist, {\n    mixologistId: mixologist.id,\n    mixologistObj: mixologist,\n    onUpdateDrink: handleUpdateDrink,\n    onDeleteDrink: handleDeleteDrink\n  }, mixologist.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this));\n  function handleUpdateDrink(updatedDrink) {\n    const found = mixologists.find(mixologist => mixologist.id == updatedDrink.mixologist_id);\n    const updatedDrinks = found.drinks.map(drink => drink.id === updatedDrink.id ? updatedDrink : drink);\n    const updatedMixologists = mixologists.map(mixologist => {\n      if (mixologist.id === found.id) {\n        mixologist.drinks = updatedDrinks;\n        return mixologist;\n      } else {\n        return mixologist;\n      }\n    });\n    setMixologists(updatedMixologists);\n  }\n  function handleAddMixologist(newMixologist) {\n    setMixologists([...mixologists, newMixologist]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mixologists\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), renderMixologists, /*#__PURE__*/_jsxDEV(NewMixologist, {\n        onAddMixologist: handleAddMixologist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n// function handleAddDrink(newDrink) {\n//   setDrinks([...drinks, newDrink])\n// }\n_s(App, \"yD+CNaD9Cw155iyQmw4rlGs9VHc=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","Mixologist","NewDrink","NewMixologist","App","mixologists","setMixologists","latestDrinks","setLatestDrinks","fetch","then","r","json","handleDeleteDrink","id","window","alert","drink","name","renderMixologists","map","mixologist","handleUpdateDrink","updatedDrink","found","find","mixologist_id","updatedDrinks","drinks","updatedMixologists","handleAddMixologist","newMixologist"],"sources":["/home/eva/Development/code/phase-3/phase-3-sinatra-react-project/app-client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\n\nimport Header from \"./Header\"\nimport Mixologist from \"./Mixologist\"\nimport NewDrink from \"./NewDrink\"\nimport NewMixologist from \"./NewMixologist\"\nimport \"./App.css\"\n\nexport default function App() {\n  const [mixologists, setMixologists] = useState([])\n  const [latestDrinks, setLatestDrinks] = useState([])\n\n  useEffect(() => {\n    fetch(\"http://localhost:9292/mixologists\")    \n    .then(r => r.json())\n    .then(mixologists => setMixologists(mixologists))\n  }, [])\n\n  useEffect(() => {\n    fetch(\"http://localhost:9292/drinks\")\n    .then(r => r.json())\n    .then(latestDrinks => setLatestDrinks(latestDrinks))\n  }, [])\n  // console.log(latestDrinks)\n\n  function handleDeleteDrink(id){\n    window.alert(`${drink.name} deleted!`)\n    // const updatedDrinks = drinksArr.filter(drink => drink.id !== id)\n    // mixologists.find()\n    // const found = mixologists.find(mixologist => {\n    //   mixologist.drinks.include?(drink.id === id)\n    //   found.drinks.filter(drink => {\n    //     drink.id !== id\n    //   })\n    //   {\n      //       mixologist.drinks = updatedDrinks\n      //       return mixologist\n      //     }else{\n      //       return mixologist\n      //     }\n      //   })\n      //   setMixologists(updatedMixologists)\n      // }\n  }  \n  // const updatedMixologists = mixologists.map(mixologist => {\n  //   if(mixologist.id === found.id){\n  //     mixologist.drinks = updatedDrinks\n  //     return mixologist\n  //   }else{\n  //     return mixologist\n  //   }\n  // })\n  // setMixologists(updatedMixologists)\n\n\n  const renderMixologists = mixologists.map(mixologist => (\n    <Mixologist \n      key={mixologist.id}\n      mixologistId={mixologist.id}      \n      mixologistObj = {mixologist}\n      onUpdateDrink={handleUpdateDrink}\n      onDeleteDrink={handleDeleteDrink}\n    />\n  ))\n\n  function handleUpdateDrink(updatedDrink){\n    const found = mixologists.find(mixologist => (\n      mixologist.id == updatedDrink.mixologist_id\n    ))\n    \n    const updatedDrinks = found.drinks.map(drink => (\n      drink.id === updatedDrink.id ? updatedDrink : drink\n    ))\n\n    const updatedMixologists = mixologists.map(mixologist => {\n      if(mixologist.id === found.id){\n        mixologist.drinks = updatedDrinks\n        return mixologist\n      }else{\n        return mixologist\n      }\n    })\n    setMixologists(updatedMixologists)\n  }\n\n  function handleAddMixologist(newMixologist){\n    setMixologists([...mixologists, newMixologist])\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"Wrapper\">\n        <Header />\n        <h2>Mixologists</h2>\n        {renderMixologists}\n        {/* <NewDrink mixologists={mixologists} onAddDrink={handleAddDrink} />  */}\n        <NewMixologist onAddMixologist={handleAddMixologist} />\n      </div>\n    </div>\n  )}\n\n    // function handleAddDrink(newDrink) {\n  //   setDrinks([...drinks, newDrink])\n  // }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}