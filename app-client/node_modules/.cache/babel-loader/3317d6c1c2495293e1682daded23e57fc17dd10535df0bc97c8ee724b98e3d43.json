{"ast":null,"code":"var _jsxFileName = \"/home/eva/Development/code/phase-3/phase-3-sinatra-react-project/app-client/src/Mixologist.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Drink from \"./Drink\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Mixologist(_ref) {\n  _s();\n  let {\n    mixologistObj,\n    onUpdateDrink\n  } = _ref;\n  // mixologistId\n\n  const drinksArr = mixologistObj.drinks;\n  // const drinks = mixologistObj\n\n  // remove state\n  const [drinks, setDrinks] = useState([]);\n  const [cards, setCards] = useState(false);\n  const renderDrinks = drinksArr.map(drink => {\n    // const renderDrinks = drinks.map(drink => {\n    return /*#__PURE__*/_jsxDEV(Drink, {\n      drink: drink,\n      onUpdateDrink: onUpdateDrink,\n      onDeleteDrink: handleDeleteDrink,\n      mixologist: mixologistObj\n    }, drink.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, this);\n  });\n  const showCards = cards ? renderDrinks : null;\n  // <p>{mixologist.name} has no drinks yet!</p> // add drink btn\n\n  // MOVED TO App.js ---->\n  // function handleUpdateDrink(updatedDrink){\n  //   console.log(updatedDrink)\n  //   // const updatedDrinks = drinks.map(drink => {\n  //   const updatedDrinks = drinksArr.map(drink => {\n  //     if(drink.id === updatedDrink.id){\n  //       return updatedDrink\n  //     }else{\n  //       return drink\n  //     }\n  //   })\n  // }\n  // <---- MOVED TO App.js\n\n  function handleDeleteDrink(id) {\n    const updatedDrinks = drinks.filter(drink => drink.id !== id);\n    setDrinks(updatedDrinks); // move state change to App.js\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"App-link\",\n      onClick: () => setCards(!cards),\n      children: [mixologistObj.name, \" \", cards ? ' ðŸ¡¨' : ' ðŸ¡ª']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), showCards]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Mixologist, \"7e8PIHoCIjrMBf1g6/ZRZjE7krU=\");\n_c = Mixologist;\nvar _c;\n$RefreshReg$(_c, \"Mixologist\");","map":{"version":3,"names":["React","useEffect","useState","Drink","Mixologist","mixologistObj","onUpdateDrink","drinksArr","drinks","setDrinks","cards","setCards","renderDrinks","map","drink","handleDeleteDrink","id","showCards","updatedDrinks","filter","name"],"sources":["/home/eva/Development/code/phase-3/phase-3-sinatra-react-project/app-client/src/Mixologist.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\"\nimport Drink from \"./Drink\"\n\nexport default function Mixologist({ mixologistObj, onUpdateDrink }) { // mixologistId\n  \n  const drinksArr = mixologistObj.drinks\n  // const drinks = mixologistObj\n\n  // remove state\n  const [drinks, setDrinks] = useState([])\n  const [cards, setCards] = useState(false)\n\n  const renderDrinks = drinksArr.map(drink => {\n  // const renderDrinks = drinks.map(drink => {\n    return <Drink \n      key={drink.id} \n      drink={drink} \n      onUpdateDrink={onUpdateDrink}\n      onDeleteDrink={handleDeleteDrink}\n      mixologist={mixologistObj}\n    />\n  })\n  \n  const showCards = \n  cards \n  ? renderDrinks\n  : null \n  // <p>{mixologist.name} has no drinks yet!</p> // add drink btn\n\n  // MOVED TO App.js ---->\n  // function handleUpdateDrink(updatedDrink){\n  //   console.log(updatedDrink)\n  //   // const updatedDrinks = drinks.map(drink => {\n  //   const updatedDrinks = drinksArr.map(drink => {\n  //     if(drink.id === updatedDrink.id){\n  //       return updatedDrink\n  //     }else{\n  //       return drink\n  //     }\n  //   })\n  // }\n  // <---- MOVED TO App.js\n\n  function handleDeleteDrink(id){\n    const updatedDrinks = drinks.filter(drink => drink.id !== id)\n    setDrinks(updatedDrinks) // move state change to App.js\n  }  \n\n  return(\n    <div>\n      <a className=\"App-link\" onClick={() => setCards(!cards)}>\n        {mixologistObj.name} {/* mixologist */}\n        {cards ? ' ðŸ¡¨' : ' ðŸ¡ª'}\n      </a>\n      {showCards}\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,KAAK,MAAM,SAAS;AAAA;AAE3B,eAAe,SAASC,UAAU,OAAmC;EAAA;EAAA,IAAlC;IAAEC,aAAa;IAAEC;EAAc,CAAC;EAAI;;EAErE,MAAMC,SAAS,GAAGF,aAAa,CAACG,MAAM;EACtC;;EAEA;EACA,MAAM,CAACA,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAMU,YAAY,GAAGL,SAAS,CAACM,GAAG,CAACC,KAAK,IAAI;IAC5C;IACE,oBAAO,QAAC,KAAK;MAEX,KAAK,EAAEA,KAAM;MACb,aAAa,EAAER,aAAc;MAC7B,aAAa,EAAES,iBAAkB;MACjC,UAAU,EAAEV;IAAc,GAJrBS,KAAK,CAACE,EAAE;MAAA;MAAA;MAAA;IAAA,QAKb;EACJ,CAAC,CAAC;EAEF,MAAMC,SAAS,GACfP,KAAK,GACHE,YAAY,GACZ,IAAI;EACN;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,SAASG,iBAAiB,CAACC,EAAE,EAAC;IAC5B,MAAME,aAAa,GAAGV,MAAM,CAACW,MAAM,CAACL,KAAK,IAAIA,KAAK,CAACE,EAAE,KAAKA,EAAE,CAAC;IAC7DP,SAAS,CAACS,aAAa,CAAC,EAAC;EAC3B;;EAEA,oBACE;IAAA,wBACE;MAAG,SAAS,EAAC,UAAU;MAAC,OAAO,EAAE,MAAMP,QAAQ,CAAC,CAACD,KAAK,CAAE;MAAA,WACrDL,aAAa,CAACe,IAAI,EAAC,GAAC,EACpBV,KAAK,GAAG,KAAK,GAAG,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QACpB,EACHO,SAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEV;AAAC,GAtDuBb,UAAU;AAAA,KAAVA,UAAU;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}